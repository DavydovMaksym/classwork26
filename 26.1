#include <iostream>

class Circle
{
    double radius;

public:
    Circle() : radius(0) {}
    Circle(double r) : radius(r) {}

    double getLength() const
    {
        return 2 * 3.14 * radius;
    }

    bool operator==(const Circle& other) const
    {
        return this->radius == other.radius;
    }

    bool operator>(const Circle& other) const
    {
        return this->getLength() > other.getLength();
    }

    Circle& operator+=(double value)
    {
        radius += value;
        return *this;
    }

    Circle& operator-=(double value)
    {
        radius -= value;
        if (radius < 0) radius = 0;
        return *this;
    }

    friend std::ostream& operator<<(std::ostream& out, const Circle& c)
    {
        out << "Radius: " << c.radius << ", Length: " << c.getLength();
        return out;
    }

    friend std::istream& operator>>(std::istream& in, Circle& c)
    {
        in >> c.radius;
        if (c.radius < 0)
        {
            c.radius = 0;
        }
        return in;
    }
};

int main()
{
    Circle c1(5), c2;

    std::cout << "Enter second radius: ";
    std::cin >> c2;

    std::cout << c1 << std::endl;
    std::cout << c2 << std::endl;

    if (c1 == c2)
    {
        std::cout << "Radiuses is the same\n";
    }
    else if (c1 > c2)
    {
        std::cout << "First is bigger\n";
    }
    else
    {
        std::cout << "Second is bigger\n";
    }

    c1 += 1;
    c2 -= 2;

    std::cout << "After change:\n";
    std::cout << c1 << std::endl;
    std::cout << c2 << std::endl;

    return 0;
}
